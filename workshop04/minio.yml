---
apiVersion: v1
kind: Namespace
metadata:
  name: minions

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-cm
  namespace: minions
  labels:
    app: minio
    name: minio-cm
data:
  MINIO_ROOT_USER: minio-root-user
  MINIO_DATA_DIR: /data
  MINIO_CI_CD: "1"

---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: minions
  labels:
    app: minio
    name: minio-secret
type: Opaque
data:
  MINIO_ROOT_PASSWORD: bWluaW8tcm9vdC1wYXNzd29yZA==

--- 
apiVersion: v1 
kind: Service
metadata:
  name: minio-hsvc
  namespace: minions 
  labels: 
    app: minio 
    name: minio-hsvc
spec:
  clusterIP: None
  selector:
    app: minio 
    name: minio-po
  ports:
    - name: data-port
      port: 9000
      targetPort: 9000
    - name: console-port
      port: 9001
      targetPort: 9001

---
apiVersion: apps/v1
kind: StatefulSet #headless service
metadata:
  name: minio-sts
  namespace: minions
  labels:
    app: minio
    name: minio-sts
spec:
  serviceName: minio-hsvc
  replicas: 4
  selector:
    matchLabels:
      app: minio
      name: minio-po
  volumeClaimTemplates:
  - metadata:
      name: minio-pvc
      labels:
        app: minio
        name: minio-pvc
    spec:
      storageClassName: do-block-storage
      accessModes: [ "ReadWriteOncePod" ]
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      name: minio-po
      labels:
        app: minio 
        name: minio-po
    spec:
      securityContext:
        fsGroup: 1001
      containers:
      - name: minio-container 
        image: bitnami/minio:latest
        command: ["minio", "server", "--address=:9000", "--console-address=:9001", "http://minio-sts-{0...3}.minio-hsvc.minions.svc.cluster.local"]
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: minio-cm
          - secretRef:
              name: minio-secret
        ports:
        - containerPort: 9000
        - containerPort: 9001
        # livenessProbe:
        #   httpGet:
        #     path: /minio/health/live
        #     port: 9000
        #   initialDelaySeconds: 180
        # readinessProbe:
        #   httpGet:
        #     path: /minio/health/ready
        #     port: 9000
        #   initialDelaySeconds: 180
        volumeMounts:
        - name: minio-pvc
          mountPath: /data
        resources:
          requests:
            cpu: 200m
            memory: 250Mi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ing
  namespace: minions
  labels:
    app: minio
    name: minio-ing
spec:
  ingressClassName: nginx
  rules:
  - host: data-188.166.199.53.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-svc
            port:
              number: 9000
  - host: console-188.166.199.53.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-svc
            port:
              number: 9001

---
apiVersion: v1
kind: Service #headful service
metadata:
  name: minio-svc
  namespace: minions 
  labels: 
    app: minio 
    name: minio-svc
spec:
  type: ClusterIP
  selector:
    app: minio 
    name: minio-po
  ports:
    - name: data-port
      port: 9000
      targetPort: 9000
    - name: console-port
      port: 9001
      targetPort: 9001